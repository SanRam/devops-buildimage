---
- hosts: default
  vars:
    rocky_image_url: "https://dl.rockylinux.org/pub/rocky/9.2/isos/x86_64/Rocky-x86_64-minimal.iso"
    rocky_image_file_name: "Rocky-x86_64-minimal.iso"
    rocky_image_checksum: "sha256:06505828e8d5d052b477af5ce62e50b938021f5c28142a327d4d5c075f0670dc" # DVD cd43bb2671472471b1fc0a7a30113dfc9a56831516c46f4dbd12fb43bb4286d2
    clonezilla_image_url: "https://sourceforge.net/projects/clonezilla/files/clonezilla_live_stable/3.1.0-22/clonezilla-live-3.1.0-22-amd64.iso/download"
    clonezilla_image_file_name: "clonezilla-live-3.1.0-22-amd64.iso"
    clonezilla_image_checksum: "sha256:6e3cd3b52fb60bf21f21b50e682b0f1cc5391c2aa97f51e20b675bd42ee84dfd"
    https_proxy: "http://172.17.89.251:8080"
  tasks:
  - name: Install required packages for libvirt/Qemu.
    dnf:
      name:
        - epel-release
        - qemu-kvm
        - libvirt
        - libvirt-client
        - virt-manager
        - virt-install
        - virt-top
        - libguestfs-tools
        - virt-viewer
      state: latest
  - name: Download Rocky 9.2 DVD file with check (sha256)
    ansible.builtin.get_url:
      url: "{{ rocky_image_url }}"
      dest: ./{{ rocky_image_file_name }}
      checksum: "{{ rocky_image_checksum }}"
      mode: '0644'
      owner: devops
      group: devops
    environment:
      https_proxy: "{{ https_proxy }}"
  - name: Download Clonezilla ISO file with check (sha256)
    ansible.builtin.get_url:
      url: "{{ clonezilla_image_url }}"
      dest: ./{{ clonezilla_image_file_name }}
      checksum: "{{ clonezilla_image_checksum }}"
      mode: '0644'
      owner: devops
      group: devops
    environment:
      https_proxy: "{{ https_proxy }}"
  - name: Start service libvirtd, if not started
    ansible.builtin.service:
      name: libvirtd
      state: started
  - name: Enable service libvirtd, and not touch the state
    ansible.builtin.service:
      name: libvirtd
      enabled: true
  - name: Stop running VM
    command: virsh shutdown "rockyvm"
    ignore_errors: true
  - name: Remove Old VM
    command: virsh undefine "rockyvm" --remove-all-storage
    ignore_errors: true
    
  - name: Install/configure/create Rocky VM - from iso and kisckstart
    command: virt-install --name "rockyvm"
             --memory 2000
             --metadata "description=Rocky9"
             --location ./"{{ rocky_image_file_name }}"
             --noautoconsole
             --disk size=40
             --initrd-inject ./files/ssg-rhel9-stig-ks.cfg
             --extra-args="ks=file:/ssg-rhel9-stig-ks.cfg console=tty0 console=ttyS0,115200n8" 
             --network bridge=virbr0,model=virtio
             --graphics vnc
             --wait=-1
             --os-variant "rocky9.0"
             --debug
        
  - name: wait for VMs ssh
    wait_for:
      host: "192.168.18.5"
      port: 22
      delay: 10
      timeout: 300

